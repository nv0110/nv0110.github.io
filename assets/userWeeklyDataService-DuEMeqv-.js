const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-C6aA6tse.js","assets/vendor-ui-aK89YfOw.js","assets/vendor-router-Cg8TMqY4.js","assets/vendor-react-eWEExxYH.js","assets/vendor-supabase-B7S7y5aO.js","assets/index-RHCjBdfQ.css"])))=>i.map(i=>d[i]);
import{_ as M}from"./vendor-supabase-B7S7y5aO.js";import{getCurrentMapleWeekStartDate as $}from"./mapleWeekUtils-Bm65Nri8.js";import{l as p}from"./index-C6aA6tse.js";import"./vendor-react-eWEExxYH.js";import"./vendor-ui-aK89YfOw.js";import"./vendor-router-Cg8TMqY4.js";async function k(){const{supabase:t}=await M(async()=>{const{supabase:a}=await import("./index-C6aA6tse.js").then(e=>e.m);return{supabase:a}},__vite__mapDeps([0,1,2,3,4,5]));return t}async function C(t,a){if(!t||!a)return{success:!1,error:"Missing required parameters."};try{const e=await k(),{data:r,error:s}=await e.from("user_boss_data").select("*").eq("user_id",t).eq("maple_week_start",a).single();return s&&s.code!=="PGRST116"?(p.error("Error fetching user weekly data:",s),{success:!1,error:"Failed to fetch weekly data."}):{success:!0,data:r||null}}catch(e){return p.error("Unexpected error fetching user weekly data:",e),{success:!1,error:"Failed to fetch weekly data."}}}async function v(t,a,e){if(!t||!a||!e)return{success:!1,error:"Missing required parameters."};try{const r=await k(),s={user_id:t,maple_week_start:a,...e},{error:o}=await r.from("user_boss_data").upsert(s,{onConflict:"user_id,maple_week_start",ignoreDuplicates:!1});return o?(p.error("Error saving user weekly data:",o),{success:!1,error:"Failed to save weekly data."}):{success:!0}}catch(r){return p.error("Unexpected error saving user weekly data:",r),{success:!1,error:"Failed to save weekly data."}}}async function P(t,a,e){if(!t||!a||!(e!=null&&e.trim()))return{success:!1,error:"Missing required parameters."};try{const r=await C(t,a);if(!r.success)return{success:!1,error:r.error};const s=r.data||{char_map:{},boss_config:{},weekly_clears:{}},o=Object.keys(s.char_map||{}).map(n=>parseInt(n)),f=o.length>0?Math.max(...o)+1:0,c=f.toString();if(Object.values(s.char_map||{}).some(n=>n.toLowerCase()===e.trim().toLowerCase()))return{success:!1,error:`Character name '${e.trim()}' already exists.`};const i={...s.char_map},u={...s.boss_config},d={...s.weekly_clears};i[c]=e.trim(),u[c]="",d[c]="";const y=await v(t,a,{char_map:i,boss_config:u,weekly_clears:d});return y.success?{success:!0,characterIndex:f}:{success:!1,error:y.error}}catch(r){return p.error("Unexpected error adding character:",r),{success:!1,error:"Failed to add character."}}}async function j(t,a,e){if(!t||!a||e===void 0)return{success:!1,error:"Missing required parameters."};try{const r=await C(t,a);if(!r.success)return{success:!1,error:r.error};if(!r.data)return{success:!1,error:"No weekly data found."};const s=r.data,o=e.toString();if(!(o in(s.char_map||{})))return{success:!1,error:"Character not found."};const f={...s.char_map},c={...s.boss_config},l={...s.weekly_clears};delete f[o],delete c[o],delete l[o];const i=await v(t,a,{char_map:f,boss_config:c,weekly_clears:l});return i.success?{success:!0}:{success:!1,error:i.error}}catch(r){return p.error("Unexpected error removing character:",r),{success:!1,error:"Failed to remove character."}}}async function z(t,a,e,r){if(!t||!a||e===void 0||!(r!=null&&r.trim()))return{success:!1,error:"Missing required parameters."};try{const s=await C(t,a);if(!s.success)return{success:!1,error:s.error};if(!s.data)return{success:!1,error:"No weekly data found."};const o=s.data,f=e.toString();if(!(f in(o.char_map||{})))return{success:!1,error:"Character not found."};if(Object.entries(o.char_map||{}).filter(u=>u[0]!==f).map(u=>u[1]).some(u=>u.toLowerCase()===r.trim().toLowerCase()))return{success:!1,error:`Character name '${r.trim()}' already exists.`};const l={...o.char_map};l[f]=r.trim();const i=await v(t,a,{char_map:l,boss_config:o.boss_config||{},weekly_clears:o.weekly_clears||{}});return i.success?{success:!0}:{success:!1,error:i.error}}catch(s){return p.error("Unexpected error updating character name:",s),{success:!1,error:"Failed to update character name."}}}async function L(t,a,e,r){if(!t||!a||e===void 0)return{success:!1,error:"Missing required parameters."};try{if(r&&r.trim()){const i=await E(r);if(!i.success)return{success:!1,error:i.error}}const s=await C(t,a);if(!s.success)return{success:!1,error:s.error};if(!s.data)return{success:!1,error:"No weekly data found."};const o=s.data,f=e.toString();if(!(f in(o.char_map||{})))return{success:!1,error:"Character not found."};const c={...o.boss_config};c[f]=r||"";const l=await v(t,a,{char_map:o.char_map||{},boss_config:c,weekly_clears:o.weekly_clears||{}});return l.success?{success:!0}:{success:!1,error:l.error}}catch(s){return p.error("Unexpected error updating boss config:",s),{success:!1,error:"Failed to update boss configuration."}}}async function E(t){if(!t||typeof t!="string")return{success:!0};try{const a=await k(),{data:e,error:r}=await a.from("boss_registry").select("boss_code, difficulty_code, crystal_value, max_party_size, enabled");if(r)return p.error("Error fetching boss registry:",r),{success:!1,error:"Failed to validate boss configuration."};const s=t.split(",");for(const o of s){const f=o.split(":");if(f.length!==3)return{success:!1,error:`Invalid boss config format: ${o}`};const[c,l,i]=f,u=parseInt(l),d=parseInt(i),y=e.find(n=>`${n.boss_code}-${n.difficulty_code}`===c||n.boss_code===c);if(!y)return{success:!1,error:`Unknown boss code: ${c}`};if(!y.enabled)return{success:!1,error:`Boss ${c} is not enabled.`};if(u!==y.crystal_value&&p.warn(`Crystal value mismatch for ${c}. Expected: ${y.crystal_value}, got: ${u}. Using database value.`),d<1||d>y.max_party_size)return{success:!1,error:`Invalid party size for ${c}. Must be between 1 and ${y.max_party_size}.`}}return{success:!0}}catch(a){return p.error("Unexpected error validating boss config:",a),{success:!1,error:"Failed to validate boss configuration."}}}async function O(t){const a=$();return await C(t,a)}async function T(t,a){const e=$();return await v(t,e,a)}async function x(t,a,e,r){try{if(!t||!a||e===void 0)return{success:!1,error:"Missing required parameters: userId, mapleWeekStart, and characterIndex"};if(r&&r.trim()){const u=r.split(",").map(d=>d.trim()).filter(d=>d);if(u.length>0){const d=await k();if(u.every(n=>/^\d+$/.test(n))){const n=u.map(w=>parseInt(w)),{data:_,error:g}=await d.from("boss_registry").select("id").in("id",n);if(g)throw g;const m=new Set(_.map(w=>w.id)),h=n.filter(w=>!m.has(w));if(h.length>0)return{success:!1,error:`Invalid boss registry IDs: ${h.join(", ")}`}}else{const{data:n,error:_}=await d.from("boss_registry").select("id").in("id",u);if(_)throw _;const g=new Set(n.map(h=>h.id)),m=u.filter(h=>!g.has(h));if(m.length>0)return{success:!1,error:`Invalid boss codes: ${m.join(", ")}`}}}}const s=await C(t,a);if(!s.success)return s;const o=s.data;if(!o)return{success:!1,error:"No weekly data found. Please add characters first."};if(!(o.char_map||{})[e])return{success:!1,error:`Character at index ${e} not found`};const l={weekly_clears:{...o.weekly_clears||{},[e]:r||""}};return await v(t,a,l)}catch(s){return p.error("Error updating character weekly clears:",s),{success:!1,error:s.message}}}async function A(t,a,e,r,s){try{if(!t||!a||e===void 0||!r||s===void 0)return{success:!1,error:"Missing required parameters"};const o=await k(),{data:f,error:c}=await o.from("boss_registry").select("id, boss_name, difficulty").eq("id",r).single();if(c){if(c.code==="PGRST116")return{success:!1,error:`Invalid boss registry ID: ${r}`};throw c}const l=await C(t,a);if(!l.success)return l;const i=l.data;if(!i)return{success:!1,error:"No weekly data found. Please add characters first."};if(!(i.char_map||{})[e])return{success:!1,error:`Character at index ${e} not found`};const d=i.weekly_clears||{},n=(d[e]||"").split(",").map(b=>b.trim()).filter(b=>b),_=r.toString();let g;s?n.includes(_)?g=n:g=[...n,_]:g=n.filter(b=>b!==_);const h={weekly_clears:{...d,[e]:g.join(",")}};return await v(t,a,h)}catch(o){return p.error("Error toggling boss clear status:",o),{success:!1,error:o.message}}}async function V(t,a,e){try{return await x(t,a,e,"")}catch(r){return p.error("Error clearing all bosses for character:",r),{success:!1,error:r.message}}}async function G(t,a,e){try{if(!t||!a||e===void 0)return{success:!1,error:"Missing required parameters"};const r=await C(t,a);if(!r.success)return r;const s=r.data;if(!s)return{success:!1,error:"No weekly data found. Please add characters first."};if(!(s.char_map||{})[e])return{success:!1,error:`Character at index ${e} not found`};const c=(s.boss_config||{})[e]||"";if(!c)return{success:!1,error:"No boss configuration found for this character"};const{parseBossConfigString:l}=await M(async()=>{const{parseBossConfigString:g}=await import("./mapleWeekUtils-Bm65Nri8.js");return{parseBossConfigString:g}},[]),i=l(c),u=await k(),{data:d,error:y}=await u.from("boss_registry").select("*");if(y)throw y;const n=[];for(const g of i){const m=g.bossCode.split("-"),h=m[0],w=m[1],b=d.find(R=>R.boss_code===h&&R.difficulty_code===w);b?n.push(b.id):p.warn(`Boss registry entry not found for boss code: ${g.bossCode}`)}const _=n.join(",");return await x(t,a,e,_)}catch(r){return p.error("Error marking all bosses for character:",r),{success:!1,error:r.message}}}export{P as addCharacterToWeeklySetup,V as clearAllBossesForCharacter,O as fetchCurrentWeekData,C as fetchUserWeeklyData,G as markAllBossesForCharacter,j as removeCharacterFromWeeklySetup,T as saveCurrentWeekData,v as saveOrUpdateUserWeeklyData,A as toggleBossClearStatus,L as updateCharacterBossConfigInWeeklySetup,z as updateCharacterNameInWeeklySetup,x as updateCharacterWeeklyClearsInWeeklySetup};
