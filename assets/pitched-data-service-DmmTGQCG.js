const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/supabaseClient-DawR2l69.js","assets/vendor-supabase-_v2quReu.js","assets/vendor-react-D5d5vywP.js","assets/weekUtils-BAOLi04i.js","assets/index-ChaJcBVv.js","assets/vendor-ui-Dn8u3Dbm.js","assets/vendor-router-CSXoLnNI.js","assets/index-BwTbnssP.css"])))=>i.map(i=>d[i]);
import{_ as U}from"./vendor-supabase-_v2quReu.js";import{getCurrentWeekKey as B}from"./weekUtils-BAOLi04i.js";import"./vendor-react-D5d5vywP.js";import"./index-ChaJcBVv.js";import"./vendor-ui-Dn8u3Dbm.js";import"./vendor-router-CSXoLnNI.js";function I(){return B()}async function k(){const{supabase:s}=await U(async()=>{const{supabase:t}=await import("./supabaseClient-DawR2l69.js");return{supabase:t}},__vite__mapDeps([0,1,2]));return s}function N(s){if(!s)return null;try{const t=new Date(s),e=new Date(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()),n=new Date(e.getUTCFullYear(),0,1),a=Math.ceil(((e-n)/864e5+n.getUTCDay()+1)/7);return`${e.getUTCFullYear()}-${a}`}catch(t){return console.error("Error getting week key from date:",t),null}}async function J(s,t){var e,n,a;try{const{character:o,characterIdx:c,bossName:i,bossDifficulty:r,isCleared:p,date:l}=t;if(!s||!o||!i||!r||p===void 0)return console.error("Missing required fields:",{userCode:s,character:o,bossName:i,bossDifficulty:r,isCleared:p}),{success:!1,error:"Missing required fields"};const f=await k(),{data:d,error:m}=await f.from("user_data").select("*").eq("id",s).single();if(m)throw console.error("Error fetching user data:",m),m;if(!d)throw console.error("No user data found"),new Error("No user data found");const u=d.data?JSON.parse(JSON.stringify(d.data)):{};u.boss_runs?Array.isArray(u.boss_runs)||(u.boss_runs=[]):u.boss_runs=[];const h=u.boss_runs,g=I(),w=(u.characters||[]).find((b,v)=>b.name===o&&(b.index===c||v===c));if(w){const b=new Set;(e=w.bosses)==null||e.forEach(S=>{b.add(`${S.name}-${S.difficulty}`)});const v=h.length,K=h.filter(S=>{if(S.character!==o||S.weekKey!==g)return!0;const O=`${S.boss}-${S.difficulty}`,P=b.has(O);return P});u.boss_runs=K,K.length}const D=u.boss_runs,y=D.findIndex(b=>b.character===o&&b.boss===i&&b.difficulty===r&&b.weekKey===g);let _;if(p){const b={id:`${o}-${i}-${r}-${g}-${Date.now()}`,character:o,characterIdx:c||0,boss:i,difficulty:r,cleared:!0,date:l||new Date().toISOString(),weekKey:g};y!==-1?(_=[...D],_[y]={..._[y],cleared:!0,date:l||new Date().toISOString(),lastUpdated:new Date().toISOString()}):_=[...D,b]}else y!==-1?_=D.filter((b,v)=>v!==y):_=[...D];const R={...u,boss_runs:_,lastUpdated:new Date().toISOString()},q={...u,boss_runs:_,lastUpdated:new Date().toISOString()},{data:W,error:A}=await f.from("user_data").update({data:q}).eq("id",s).select();if(A)throw console.error("Database update error:",A),A;const{data:$,error:x}=await f.from("user_data").select("*").eq("id",s).single();if(x)console.error("Verification fetch error:",x);else if(!((n=$==null?void 0:$.data)!=null&&n.boss_runs)){const b={id:s,data:{...$.data,boss_runs:_,lastUpdated:new Date().toISOString()}},{error:v}=await f.from("user_data").upsert(b);if(v)console.error("Upsert failed:",v);else{const{data:K}=await f.from("user_data").select("*").eq("id",s).single();(a=K==null?void 0:K.data)!=null&&a.boss_runs}}return{success:!0,bossRuns:_,updatedData:R}}catch(o){return console.error("Error saving boss run:",o),{success:!1,error:o}}}async function V(s,t,e=!1,n=null){try{const{character:a,bossName:o,itemName:c,itemImage:i,date:r,characterIdx:p,bossDifficulty:l}=t;if(!s||!a||!o||!c)return console.error("Missing required fields:",{userCode:s,character:a,bossName:o,itemName:c}),{success:!1,error:"Missing required fields"};const f=await k(),{data:d,error:m}=await f.from("user_data").select("pitched_items").eq("id",s).single();if(m)throw console.error("Error fetching user data:",m),m;const u=d.pitched_items||[],h=n||N(r)||I(),g=I(),E=h===g;if(e){const R=u.filter(W=>!(W.character===a&&W.boss===o&&W.item===c&&W.weekKey===h)),{error:q}=await f.from("user_data").update({pitched_items:R}).eq("id",s);if(q)throw q;return{success:!0}}const w={character:a,characterIdx:p||0,boss:o,difficulty:l||"Unknown",item:c,image:i||`/items/${c.toLowerCase()}.png`,date:r||new Date().toISOString(),weekKey:h};if(u.find(R=>R.character===a&&R.boss===o&&R.item===c&&R.weekKey===h))return{success:!0,alreadyExists:!0};const y=[...u,w],{error:_}=await f.from("user_data").update({pitched_items:y}).eq("id",s);if(_)throw _;return{success:!0,data:w,updatedWeekKey:h}}catch(a){return console.error("Error saving pitched item:",a),{success:!1,error:a.message||"Unknown error occurred"}}}async function j(s){try{const t=await k(),{data:e,error:n}=await t.from("user_data").select("pitched_items").eq("id",s).single();if(n)throw n;return{success:!0,items:(e==null?void 0:e.pitched_items)||[]}}catch(t){return console.error("Error fetching all pitched items:",t),{success:!1,error:t,items:[]}}}async function G(s,t=null){try{const e=await k(),{data:n,error:a}=await e.from("user_data").select("pitched_items").eq("id",s).single();if(a)throw a;const o=n.pitched_items||[],c={};return o.forEach(i=>{const r=new Date(i.date).getFullYear();t&&r!==parseInt(t)||(c[r]||(c[r]={total:0,characters:new Set,items:[]}),c[r].total+=1,c[r].characters.add(i.character),c[r].items.push({character:i.character,boss:i.boss,item:i.item,image:i.image,date:i.date}))}),Object.keys(c).forEach(i=>{c[i].characters=Array.from(c[i].characters)}),{success:!0,data:c}}catch(e){return console.error("Error fetching yearly pitched stats:",e),{success:!1,error:e,data:{}}}}async function z(s,t){try{const e=await k(),{data:n,error:a}=await e.from("user_data").select("pitched_items, data").eq("id",s).single();if(a)throw a;const o=n.pitched_items||[],c=n.data||{},i=c.boss_runs||[],r=I(),p=o.filter(m=>!t.some(u=>m.character===u.character&&m.boss===u.bossName&&m.item===u.itemName&&m.weekKey===u.weekKey)),l=t.filter(m=>m.weekKey===r);let f=c;if(l.length>0){const m=i.filter(u=>!l.some(g=>u.character===g.character&&u.boss===g.bossName&&u.weekKey===g.weekKey&&u.hasPitchedItem===!0));f={...c,boss_runs:m,lastUpdated:new Date().toISOString()}}const{error:d}=await e.from("user_data").update({pitched_items:p,...l.length>0&&{data:f}}).eq("id",s);if(d)throw d;return{success:!0}}catch(e){return console.error("Error removing many pitched items:",e),{success:!1,error:e}}}async function C(s){var t;try{const e=await k(),{data:n,error:a}=await e.from("user_data").select("data, pitched_items").eq("id",s).single();if(a)throw a;return{success:!0,export:{data:n.data,pitched_items:n.pitched_items,weekKey:((t=n.data)==null?void 0:t.weekKey)||I(),exportDate:new Date().toISOString()}}}catch(e){return console.error("Error exporting user data:",e),{success:!1,error:e}}}async function Q(s,t){var e;try{if(!t||typeof t!="object")throw new Error("Invalid import object");const{data:n,pitched_items:a,weekKey:o}=t,c=await k(),{data:i,error:r}=await c.from("user_data").select("data").eq("id",s).single();if(r&&r.code!=="PGRST116")throw r;const p=I(),l=(e=i==null?void 0:i.data)==null?void 0:e.weekKey;let f={...n};o&&o!==p&&(console.log(`[Import] Week key transition: ${o} -> ${p}`),f.weekKey=p);const{error:d}=await c.from("user_data").update({data:f,pitched_items:a}).eq("id",s);if(d)throw d;return console.log(`[Import] Successfully imported data for user '${s}'.`),{success:!0,data:f}}catch(n){return console.error("Error importing user data:",n),{success:!1,error:n}}}async function X(s,t,e=0){try{if(!s||!t)return console.error("Missing required fields:",{userCode:s,characterName:t}),{success:!1,error:"Missing required fields"};const n=await k(),{data:a,error:o}=await n.from("user_data").select("data, pitched_items").eq("id",s).single();if(o)throw console.error("Error fetching user data:",o),o;const c=a.data||{},i=a.pitched_items||[],r=c.boss_runs||[],p=i.filter(h=>{const g=h.character===t&&(h.characterIdx===e||h.characterIndex===e);return!g}),l=r.filter(h=>{const g=h.character===t&&(h.characterIdx===e||h.characterIndex===e),E=h.isPitched===!0||h.hasPitchedItem===!0;return!(g&&E)}),f=new Date().toISOString(),d={timestamp:f,action:"purge_pitched_records",character:t,characterIdx:e,itemsRemoved:i.length-p.length,bossRunsRemoved:r.length-l.length,userAgent:typeof navigator<"u"?navigator.userAgent:"Server"},m={...c,boss_runs:l,lastUpdated:f,pitched_reset_history:[...c.pitched_reset_history||[],d].slice(-50)},{error:u}=await n.from("user_data").update({pitched_items:p,data:m}).eq("id",s);if(u)throw console.error("Database update error:",u),u;return{success:!0,audit:d,itemsRemoved:d.itemsRemoved,bossRunsRemoved:d.bossRunsRemoved,bossRunsPreserved:l.length}}catch(n){return console.error("Error purging pitched records:",n),{success:!1,error:n.message||"Unknown error occurred"}}}async function Z(s){var t;try{if(!s)return{success:!1,error:"User code is required"};const e=await k(),{data:n,error:a}=await e.from("user_data").select("data").eq("id",s).single();if(a)throw console.error("Error fetching audit history:",a),a;const c=(((t=n.data)==null?void 0:t.pitched_reset_history)||[]).sort((i,r)=>new Date(r.timestamp)-new Date(i.timestamp));return{success:!0,history:c,totalResets:c.length}}catch(e){return console.error("Error getting pitched reset audit history:",e),{success:!1,error:e.message||"Unknown error occurred"}}}function ee(s,t,e,n){const a={...s};return Object.keys(a).forEach(o=>{o.startsWith(`${t}-${e}__`)&&o.endsWith(`__${n}`)&&delete a[o]}),a}async function te(s){try{if(!s)return console.log("No user code provided for getAvailableWeeks"),{success:!1,error:"No user code provided"};const t=await k(),{data:e,error:n}=await t.from("user_data").select("data, pitched_items").eq("id",s).single();if(n)return console.error("Error fetching user data for available weeks:",n),{success:!1,error:n.message};const a=new Set,o=I();a.add(o),e.pitched_items&&Array.isArray(e.pitched_items)&&e.pitched_items.forEach(i=>{i.weekKey&&a.add(i.weekKey)}),e.data&&e.data.boss_runs&&Array.isArray(e.data.boss_runs)&&e.data.boss_runs.forEach(i=>{i.weekKey&&a.add(i.weekKey)}),e.data&&e.data.weekKey&&a.add(e.data.weekKey);const c=Array.from(a).sort((i,r)=>{const[p,l]=i.split("-").map(Number),[f,d]=r.split("-").map(Number);return p!==f?p-f:l-d});return{success:!0,weeks:c,currentWeek:o,oldestWeek:c.length>0?c[0]:o,newestWeek:c.length>0?c[c.length-1]:o}}catch(t){return console.error("Error in getAvailableWeeks:",t),{success:!1,error:t.message}}}async function re(s){try{if(!s)return console.error("Missing required field: userCode"),{success:!1,error:"Missing required field: userCode"};const t=await k(),{data:e,error:n}=await t.from("user_data").select("data, pitched_items").eq("id",s).single();if(n)throw console.error("Error fetching user data:",n),n;const a=e.data||{},o=e.pitched_items||[],c=a.boss_runs||[],i=new Date().toISOString(),r={timestamp:i,action:"complete_stats_reset",itemsRemoved:o.length,bossRunsRemoved:c.length,userAgent:typeof navigator<"u"?navigator.userAgent:"Server"},p={...a,boss_runs:[],lastUpdated:i,pitched_reset_history:[...a.pitched_reset_history||[],r].slice(-50)},{error:l}=await t.from("user_data").update({pitched_items:[],data:p}).eq("id",s);if(l)throw console.error("Database update error:",l),l;return{success:!0,audit:r,itemsRemoved:r.itemsRemoved,bossRunsRemoved:r.bossRunsRemoved}}catch(t){return console.error("Error in complete stats reset:",t),{success:!1,error:t.message||"Unknown error occurred"}}}async function se(s,t){try{if(!s||!Array.isArray(t)||t.length===0)return console.error("Invalid parameters for batch boss runs"),{success:!1,error:"Invalid parameters"};for(const d of t){const{character:m,characterIdx:u,bossName:h,bossDifficulty:g,isCleared:E,date:w}=d;if(!m||!h||!g||E===void 0)return console.error("Missing required fields in batch entry:",d),{success:!1,error:"Missing required fields in batch entry"}}const e=await k(),{data:n,error:a}=await e.from("user_data").select("*").eq("id",s).single();if(a)throw console.error("Error fetching user data for batch update:",a),a;if(!n)throw console.error("No user data found for batch update"),new Error("No user data found");const o=n.data?JSON.parse(JSON.stringify(n.data)):{};(!o.boss_runs||!Array.isArray(o.boss_runs))&&(o.boss_runs=[]);const c=[...o.boss_runs],i=I();let r=[...c];for(const d of t){const{character:m,characterIdx:u,bossName:h,bossDifficulty:g,isCleared:E,date:w}=d,D=r.findIndex(y=>y.character===m&&y.boss===h&&y.difficulty===g&&y.weekKey===i);if(E){const y={id:`${m}-${h}-${g}-${i}-${Date.now()}`,character:m,characterIdx:u||0,boss:h,difficulty:g,cleared:!0,date:w||new Date().toISOString(),weekKey:i};D!==-1?r[D]={...r[D],cleared:!0,date:w||new Date().toISOString(),lastUpdated:new Date().toISOString()}:r.push(y)}else D!==-1&&(r=r.filter((y,_)=>_!==D))}const p={...o,boss_runs:r,lastUpdated:new Date().toISOString()},{data:l,error:f}=await e.from("user_data").update({data:p}).eq("id",s).select();if(f)throw console.error("Batch database update error:",f),f;return{success:!0,updatedCount:t.length,totalBossRuns:r.length}}catch(e){return console.error("Error in saveBatchBossRuns:",e),{success:!1,error:e.message}}}async function ae(s){try{if(!s)return console.log("No user code provided for getHistoricalWeekAnalysis"),{success:!1,error:"No user code provided"};const t=await k(),{data:e,error:n}=await t.from("user_data").select("data, pitched_items").eq("id",s).single();if(n)return console.error("Error fetching user data for historical analysis:",n),{success:!1,error:n.message};const a=I(),o=new Set;e.pitched_items&&Array.isArray(e.pitched_items)&&e.pitched_items.forEach((d,m)=>{d.weekKey&&d.weekKey!==a&&o.add(d.weekKey)}),e.data&&e.data.boss_runs&&Array.isArray(e.data.boss_runs)&&e.data.boss_runs.forEach((d,m)=>{d.weekKey&&d.weekKey!==a&&o.add(d.weekKey)});const c=Array.from(o).sort((d,m)=>{const u=E=>{const w=E.split("-");return w.length===2?{year:parseInt(w[0]),week:parseInt(w[1])}:w.length===3?{year:parseInt(w[0]),week:parseInt(w[1])}:{year:0,week:0}},h=u(d),g=u(m);return h.year!==g.year?h.year-g.year:h.week-g.week}),i=c.length>0;let r=null,p="new",l=8;if(i){r=c[0];const{getWeekOffset:d}=await U(async()=>{const{getWeekOffset:h}=await import("./weekUtils-BAOLi04i.js");return{getWeekOffset:h}},__vite__mapDeps([3,4,5,6,2,1,7])),m=d(r),u=Math.abs(m);u>8?(p="existing",l=u):p="new"}return{success:!0,hasHistoricalData:i,oldestHistoricalWeek:r,historicalWeeks:c,totalHistoricalWeeks:c.length,userType:p,adaptiveWeekLimit:l,currentWeek:a,analysis:{pitchedItemsCount:e.pitched_items?e.pitched_items.length:0,bossRunsCount:e.data&&e.data.boss_runs?e.data.boss_runs.length:0,weeksWithData:c.length+1}}}catch(t){return console.error("Error in getHistoricalWeekAnalysis:",t),{success:!1,error:t.message}}}async function oe(s,t){try{if(!s||!Array.isArray(t))return console.error("Invalid parameters for pitched items cleanup"),{success:!1,error:"Invalid parameters"};const e=await k(),{data:n,error:a}=await e.from("user_data").select("pitched_items").eq("id",s).single();if(a)return console.error("Error fetching pitched items for cleanup:",a),{success:!1,error:a.message};const o=n.pitched_items||[];if(o.length===0)return{success:!0,itemsRemoved:0};const c=new Set;t.forEach((r,p)=>{var l;(l=r.bosses)==null||l.forEach(f=>{const d=`${r.name}-${p}-${f.name}-${f.difficulty}`;c.add(d)})});const i=o.filter(r=>{const p=`${r.character}-${r.characterIdx||0}-${r.boss}-${r.difficulty||"Unknown"}`;let l=c.has(p);if(!l&&(r.difficulty==="Unknown"||!r.difficulty)){const f=`${r.character}-${r.characterIdx||0}-${r.boss}-`;l=Array.from(c).some(d=>d.startsWith(f))}return l});if(i.length!==o.length){const{error:r}=await e.from("user_data").update({pitched_items:i}).eq("id",s);return r?(console.error("Error updating pitched items:",r),{success:!1,error:r.message}):{success:!0,itemsRemoved:o.length-i.length}}else return{success:!0,itemsRemoved:0}}catch(e){return console.error("Error in cleanupOrphanedPitchedItems:",e),{success:!1,error:e.message||"Unknown error occurred"}}}export{oe as cleanupOrphanedPitchedItems,ee as clearCharacterPitchedUI,C as exportUserData,j as getAllPitchedItems,te as getAvailableWeeks,I as getCurrentWeekKey,ae as getHistoricalWeekAnalysis,Z as getPitchedResetAuditHistory,G as getYearlyPitchedStats,Q as importUserData,re as purgeAllStatsData,X as purgePitchedRecords,z as removeManyPitchedItems,se as saveBatchBossRuns,J as saveBossRun,V as savePitchedItem};
