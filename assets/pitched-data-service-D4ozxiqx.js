const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/supabaseClient-D8oTKsok.js","assets/vendor-supabase-BFiW0B7-.js","assets/vendor-react-DrD-X_hS.js","assets/Navbar-DRcgWmZ6.js","assets/vendor-ui-CuB_UNaH.js","assets/vendor-router-JN-2l_OL.js","assets/index-BZwWEsGV.js","assets/index-tCh2PDLW.css"])))=>i.map(i=>d[i]);
import{_ as M}from"./vendor-supabase-BFiW0B7-.js";import{a as C}from"./Navbar-DRcgWmZ6.js";import"./vendor-react-DrD-X_hS.js";import"./vendor-ui-CuB_UNaH.js";import"./vendor-router-JN-2l_OL.js";import"./index-BZwWEsGV.js";function q(){return C()}async function E(){const{supabase:s}=await M(async()=>{const{supabase:t}=await import("./supabaseClient-D8oTKsok.js");return{supabase:t}},__vite__mapDeps([0,1,2]));return s}function F(s){if(!s)return null;try{const t=new Date(s),e=new Date(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()),c=new Date(e.getUTCFullYear(),0,1),n=Math.ceil(((e-c)/864e5+c.getUTCDay()+1)/7);return`${e.getUTCFullYear()}-${n}`}catch(t){return console.error("Error getting week key from date:",t),null}}async function z(s,t){var e,c,n;try{const{character:r,characterIdx:o,bossName:i,bossDifficulty:a,isCleared:f,date:l}=t;if(!s||!r||!i||!a||f===void 0)return console.error("Missing required fields:",{userCode:s,character:r,bossName:i,bossDifficulty:a,isCleared:f}),{success:!1,error:"Missing required fields"};const m=await E(),{data:d,error:y}=await m.from("user_data").select("*").eq("id",s).single();if(y)throw console.error("Error fetching user data:",y),y;if(!d)throw console.error("No user data found"),new Error("No user data found");const u=d.data?JSON.parse(JSON.stringify(d.data)):{};u.boss_runs?Array.isArray(u.boss_runs)||(u.boss_runs=[]):u.boss_runs=[];const h=u.boss_runs,p=q(),_=(u.characters||[]).find((g,R)=>g.name===r&&(g.index===o||R===o));if(_){const g=new Set;(e=_.bosses)==null||e.forEach($=>{g.add(`${$.name}-${$.difficulty}`)});const R=h.length,W=h.filter($=>{if($.character!==r||$.weekKey!==p)return!0;const P=`${$.boss}-${$.difficulty}`,O=g.has(P);return O});u.boss_runs=W,W.length}const I=u.boss_runs,b=I.findIndex(g=>g.character===r&&g.boss===i&&g.difficulty===a&&g.weekKey===p);let k;if(f){const g={id:`${r}-${i}-${a}-${p}-${Date.now()}`,character:r,characterIdx:o||0,boss:i,difficulty:a,cleared:!0,date:l||new Date().toISOString(),weekKey:p};b!==-1?(k=[...I],k[b]={...k[b],cleared:!0,date:l||new Date().toISOString(),lastUpdated:new Date().toISOString()}):k=[...I,g]}else b!==-1?k=I.filter((g,R)=>R!==b):k=[...I];const A={...u,boss_runs:k,lastUpdated:new Date().toISOString()},x={...u,boss_runs:k,lastUpdated:new Date().toISOString()},{data:D,error:K}=await m.from("user_data").update({data:x}).eq("id",s).select();if(K)throw console.error("Database update error:",K),K;const{data:w,error:S}=await m.from("user_data").select("*").eq("id",s).single();if(S)console.error("Verification fetch error:",S);else if(!((c=w==null?void 0:w.data)!=null&&c.boss_runs)){const g={id:s,data:{...w.data,boss_runs:k,lastUpdated:new Date().toISOString()}},{error:R}=await m.from("user_data").upsert(g);if(R)console.error("Upsert failed:",R);else{const{data:W}=await m.from("user_data").select("*").eq("id",s).single();(n=W==null?void 0:W.data)!=null&&n.boss_runs}}return{success:!0,bossRuns:k,updatedData:A}}catch(r){return console.error("Error saving boss run:",r),{success:!1,error:r}}}async function Q(s,t,e=!1,c=null){var n;try{const{character:r,bossName:o,itemName:i,itemImage:a,date:f,characterIdx:l,bossDifficulty:m}=t;if(!s||!r||!o||!i||!a)return console.error("Missing required fields:",{userCode:s,character:r,bossName:o,itemName:i,itemImage:a}),{success:!1,error:"Missing required fields"};const d=await E(),{data:y,error:u}=await d.from("user_data").select("pitched_items, data").eq("id",s).single();if(u)throw console.error("Error fetching user data:",u),u;const h=y.pitched_items||[],p=y.data||{},v=p.boss_runs||[],_=c||F(f)||q(),I=q(),b=_===I;if(b&&!e){const A=(p.characters||[]).find((x,D)=>x.name===r&&(x.index===l||D===l));if(A){const x=new Set;(n=A.bosses)==null||n.forEach(w=>{x.add(`${w.name}-${w.difficulty}`)});const D=h.length,K=h.filter(w=>{if(w.character!==r||w.weekKey!==I)return!0;const S=`${w.boss}-${w.difficulty||"Unknown"}`,g=x.has(S);return g});D!==K.length&&(h.length=0,h.push(...K))}}if(e){const k=h.filter(D=>!(D.character===r&&D.boss===o&&D.item===i&&D.weekKey===_));let A=p;if(b){const D=v.filter(K=>!(K.character===r&&K.boss===o&&K.weekKey===_&&K.hasPitchedItem===!0));A={...p,boss_runs:D,lastUpdated:new Date().toISOString()}}const{error:x}=await d.from("user_data").update({pitched_items:k,...b&&{data:A}}).eq("id",s);if(x)throw x;return{success:!0}}else{const k={character:r,characterIdx:l||0,boss:o,difficulty:m,item:i,image:a,date:f||new Date().toISOString(),weekKey:_};if(h.find(w=>w.character===r&&w.boss===o&&w.item===i&&w.weekKey===_))return{success:!0,alreadyExists:!0};const x=[...h,k];let D=p;if(b){let w=[...v];const S=v.findIndex(g=>g.character===r&&g.boss===o&&g.weekKey===_);if(S===-1){const $=H(o).sort((P,O)=>{const B={Extreme:5,Hard:4,Chaos:3,Normal:2,Easy:1},U=P.split("-")[1],N=O.split("-")[1];return(B[N]||0)-(B[U]||0)})[0].split("-")[1];w.push({character:r,characterIdx:l||0,boss:o,difficulty:$,cleared:!0,date:f||new Date().toISOString(),weekKey:_,hasPitchedItem:!0})}else w[S]={...w[S],hasPitchedItem:!0,date:f||new Date().toISOString()};D={...p,boss_runs:w,lastUpdated:new Date().toISOString()}}const{error:K}=await d.from("user_data").update({pitched_items:x,...b&&{data:D}}).eq("id",s);if(K)throw K;if(b){const S=D.checked||{},g=`${r}-${l||0}`,R=H(o);let W=!1;if(S[g]){for(const $ of R)if(S[g][$]){W=!0;break}}if(!W&&R.length>0){const P=R.sort((O,B)=>{const U={Extreme:5,Hard:4,Chaos:3,Normal:2,Easy:1},N=O.split("-")[1],T=B.split("-")[1];return(U[T]||0)-(U[N]||0)})[0];S[g]||(S[g]={}),S[g][P]=!0}}return{success:!0}}return{success:!0,data:pitchedItem,updatedWeekKey:_}}catch(r){return console.error("Error saving pitched item:",r),{success:!1,error:r.message||"Unknown error occurred"}}}async function X(s){var t;try{const e=await E(),{data:c,error:n}=await e.from("user_data").select("data").eq("id",s).single();if(n)throw n;return{success:!0,data:((t=c==null?void 0:c.data)==null?void 0:t.pitchedItems)||[]}}catch(e){return console.error("Error fetching pitched items:",e),{success:!1,error:e,data:[]}}}async function Z(s){try{const t=await E(),{data:e,error:c}=await t.from("user_data").select("pitched_items").eq("id",s).single();if(c)throw c;return{success:!0,items:(e==null?void 0:e.pitched_items)||[]}}catch(t){return console.error("Error fetching all pitched items:",t),{success:!1,error:t,items:[]}}}async function ee(s,t=null){try{const e=await E(),{data:c,error:n}=await e.from("user_data").select("pitched_items").eq("id",s).single();if(n)throw n;const r=c.pitched_items||[],o={};return r.forEach(i=>{const a=new Date(i.date).getFullYear();t&&a!==parseInt(t)||(o[a]||(o[a]={total:0,characters:new Set,items:[]}),o[a].total+=1,o[a].characters.add(i.character),o[a].items.push({character:i.character,boss:i.boss,item:i.item,image:i.image,date:i.date}))}),Object.keys(o).forEach(i=>{o[i].characters=Array.from(o[i].characters)}),{success:!0,data:o}}catch(e){return console.error("Error fetching yearly pitched stats:",e),{success:!1,error:e,data:{}}}}async function te(s,t){try{const e=await E(),{data:c,error:n}=await e.from("user_data").select("pitched_items, data").eq("id",s).single();if(n)throw n;const r=c.pitched_items||[],o=c.data||{},i=o.boss_runs||[],a=q(),f=r.filter(y=>!t.some(u=>y.character===u.character&&y.boss===u.bossName&&y.item===u.itemName&&y.weekKey===u.weekKey)),l=t.filter(y=>y.weekKey===a);let m=o;if(l.length>0){const y=i.filter(u=>!l.some(p=>u.character===p.character&&u.boss===p.bossName&&u.weekKey===p.weekKey&&u.hasPitchedItem===!0));m={...o,boss_runs:y,lastUpdated:new Date().toISOString()}}const{error:d}=await e.from("user_data").update({pitched_items:f,...l.length>0&&{data:m}}).eq("id",s);if(d)throw d;return{success:!0}}catch(e){return console.error("Error removing many pitched items:",e),{success:!1,error:e}}}async function re(s){var t;try{const e=await E(),{data:c,error:n}=await e.from("user_data").select("data, pitched_items").eq("id",s).single();if(n)throw n;return{success:!0,export:{data:c.data,pitched_items:c.pitched_items,weekKey:((t=c.data)==null?void 0:t.weekKey)||q(),exportDate:new Date().toISOString()}}}catch(e){return console.error("Error exporting user data:",e),{success:!1,error:e}}}function H(s){const t=["Easy","Normal","Hard","Chaos","Extreme"];return({Lotus:["Easy","Normal","Hard","Extreme"],Damien:["Normal","Hard"],Will:["Easy","Normal","Hard"],Lucid:["Easy","Normal","Hard"],"Chosen Seren":["Normal","Hard","Extreme"],"Watcher Kalos":["Easy","Normal","Chaos","Extreme"],Kaling:["Easy","Normal","Hard","Extreme"],Limbo:["Normal","Hard"]}[s]||t).map(n=>`${s}-${n}`)}async function se(s,t){var e;try{if(!t||typeof t!="object")throw new Error("Invalid import object");const{data:c,pitched_items:n,weekKey:r}=t,o=await E(),{data:i,error:a}=await o.from("user_data").select("data").eq("id",s).single();if(a&&a.code!=="PGRST116")throw a;const f=q(),l=(e=i==null?void 0:i.data)==null?void 0:e.weekKey;let m={...c};r&&r!==f&&(console.log(`[Import] Week key transition: ${r} -> ${f}`),m.weekKey=f);const{error:d}=await o.from("user_data").update({data:m,pitched_items:n}).eq("id",s);if(d)throw d;return console.log(`[Import] Successfully imported data for user '${s}'.`),{success:!0,data:m}}catch(c){return console.error("Error importing user data:",c),{success:!1,error:c}}}async function ae(s,t,e=0){try{if(!s||!t)return console.error("Missing required fields:",{userCode:s,characterName:t}),{success:!1,error:"Missing required fields"};const c=await E(),{data:n,error:r}=await c.from("user_data").select("data, pitched_items").eq("id",s).single();if(r)throw console.error("Error fetching user data:",r),r;const o=n.data||{},i=n.pitched_items||[],a=o.boss_runs||[],f=i.filter(h=>{const p=h.character===t&&(h.characterIdx===e||h.characterIndex===e);return!p}),l=a.filter(h=>{const p=h.character===t&&(h.characterIdx===e||h.characterIndex===e),v=h.isPitched===!0||h.hasPitchedItem===!0;return!(p&&v)}),m=new Date().toISOString(),d={timestamp:m,action:"purge_pitched_records",character:t,characterIdx:e,itemsRemoved:i.length-f.length,bossRunsRemoved:a.length-l.length,userAgent:typeof navigator<"u"?navigator.userAgent:"Server"},y={...o,boss_runs:l,lastUpdated:m,pitched_reset_history:[...o.pitched_reset_history||[],d].slice(-50)},{error:u}=await c.from("user_data").update({pitched_items:f,data:y}).eq("id",s);if(u)throw console.error("Database update error:",u),u;return{success:!0,audit:d,itemsRemoved:d.itemsRemoved,bossRunsRemoved:d.bossRunsRemoved,bossRunsPreserved:l.length}}catch(c){return console.error("Error purging pitched records:",c),{success:!1,error:c.message||"Unknown error occurred"}}}async function oe(s){var t;try{if(!s)return{success:!1,error:"User code is required"};const e=await E(),{data:c,error:n}=await e.from("user_data").select("data").eq("id",s).single();if(n)throw console.error("Error fetching audit history:",n),n;const o=(((t=c.data)==null?void 0:t.pitched_reset_history)||[]).sort((i,a)=>new Date(a.timestamp)-new Date(i.timestamp));return{success:!0,history:o,totalResets:o.length}}catch(e){return console.error("Error getting pitched reset audit history:",e),{success:!1,error:e.message||"Unknown error occurred"}}}function ce(s,t,e,c){const n={...s};return Object.keys(n).forEach(r=>{r.startsWith(`${t}-${e}__`)&&r.endsWith(`__${c}`)&&delete n[r]}),n}async function ne(s){try{if(!s)return console.log("No user code provided for getAvailableWeeks"),{success:!1,error:"No user code provided"};const t=await E(),{data:e,error:c}=await t.from("user_data").select("data, pitched_items").eq("id",s).single();if(c)return console.error("Error fetching user data for available weeks:",c),{success:!1,error:c.message};const n=new Set,r=q();n.add(r),e.pitched_items&&Array.isArray(e.pitched_items)&&e.pitched_items.forEach(i=>{i.weekKey&&n.add(i.weekKey)}),e.data&&e.data.boss_runs&&Array.isArray(e.data.boss_runs)&&e.data.boss_runs.forEach(i=>{i.weekKey&&n.add(i.weekKey)}),e.data&&e.data.weekKey&&n.add(e.data.weekKey);const o=Array.from(n).sort((i,a)=>{const[f,l]=i.split("-").map(Number),[m,d]=a.split("-").map(Number);return f!==m?f-m:l-d});return{success:!0,weeks:o,currentWeek:r,oldestWeek:o.length>0?o[0]:r,newestWeek:o.length>0?o[o.length-1]:r}}catch(t){return console.error("Error in getAvailableWeeks:",t),{success:!1,error:t.message}}}async function ie(s){try{if(!s)return console.error("Missing required field: userCode"),{success:!1,error:"Missing required field: userCode"};const t=await E(),{data:e,error:c}=await t.from("user_data").select("data, pitched_items").eq("id",s).single();if(c)throw console.error("Error fetching user data:",c),c;const n=e.data||{},r=e.pitched_items||[],o=n.boss_runs||[],i=new Date().toISOString(),a={timestamp:i,action:"complete_stats_reset",itemsRemoved:r.length,bossRunsRemoved:o.length,userAgent:typeof navigator<"u"?navigator.userAgent:"Server"},f={...n,boss_runs:[],lastUpdated:i,pitched_reset_history:[...n.pitched_reset_history||[],a].slice(-50)},{error:l}=await t.from("user_data").update({pitched_items:[],data:f}).eq("id",s);if(l)throw console.error("Database update error:",l),l;return{success:!0,audit:a,itemsRemoved:a.itemsRemoved,bossRunsRemoved:a.bossRunsRemoved}}catch(t){return console.error("Error in complete stats reset:",t),{success:!1,error:t.message||"Unknown error occurred"}}}async function de(s,t){try{if(!s||!Array.isArray(t)||t.length===0)return console.error("Invalid parameters for batch boss runs"),{success:!1,error:"Invalid parameters"};for(const d of t){const{character:y,characterIdx:u,bossName:h,bossDifficulty:p,isCleared:v,date:_}=d;if(!y||!h||!p||v===void 0)return console.error("Missing required fields in batch entry:",d),{success:!1,error:"Missing required fields in batch entry"}}const e=await E(),{data:c,error:n}=await e.from("user_data").select("*").eq("id",s).single();if(n)throw console.error("Error fetching user data for batch update:",n),n;if(!c)throw console.error("No user data found for batch update"),new Error("No user data found");const r=c.data?JSON.parse(JSON.stringify(c.data)):{};(!r.boss_runs||!Array.isArray(r.boss_runs))&&(r.boss_runs=[]);const o=[...r.boss_runs],i=q();let a=[...o];for(const d of t){const{character:y,characterIdx:u,bossName:h,bossDifficulty:p,isCleared:v,date:_}=d,I=a.findIndex(b=>b.character===y&&b.boss===h&&b.difficulty===p&&b.weekKey===i);if(v){const b={id:`${y}-${h}-${p}-${i}-${Date.now()}`,character:y,characterIdx:u||0,boss:h,difficulty:p,cleared:!0,date:_||new Date().toISOString(),weekKey:i};I!==-1?a[I]={...a[I],cleared:!0,date:_||new Date().toISOString(),lastUpdated:new Date().toISOString()}:a.push(b)}else I!==-1&&(a=a.filter((b,k)=>k!==I))}const f={...r,boss_runs:a,lastUpdated:new Date().toISOString()},{data:l,error:m}=await e.from("user_data").update({data:f}).eq("id",s).select();if(m)throw console.error("Batch database update error:",m),m;return{success:!0,updatedCount:t.length,totalBossRuns:a.length}}catch(e){return console.error("Error in saveBatchBossRuns:",e),{success:!1,error:e.message}}}async function ue(s){try{if(!s)return console.log("No user code provided for getHistoricalWeekAnalysis"),{success:!1,error:"No user code provided"};const t=await E(),{data:e,error:c}=await t.from("user_data").select("data, pitched_items").eq("id",s).single();if(c)return console.error("Error fetching user data for historical analysis:",c),{success:!1,error:c.message};const n=q(),r=new Set;e.pitched_items&&Array.isArray(e.pitched_items)&&e.pitched_items.forEach((d,y)=>{d.weekKey&&d.weekKey!==n&&r.add(d.weekKey)}),e.data&&e.data.boss_runs&&Array.isArray(e.data.boss_runs)&&e.data.boss_runs.forEach((d,y)=>{d.weekKey&&d.weekKey!==n&&r.add(d.weekKey)});const o=Array.from(r).sort((d,y)=>{const u=v=>{const _=v.split("-");return _.length===2?{year:parseInt(_[0]),week:parseInt(_[1])}:_.length===3?{year:parseInt(_[0]),week:parseInt(_[1])}:{year:0,week:0}},h=u(d),p=u(y);return h.year!==p.year?h.year-p.year:h.week-p.week}),i=o.length>0;let a=null,f="new",l=8;if(i){a=o[0];const{getWeekOffset:d}=await M(async()=>{const{getWeekOffset:h}=await import("./Navbar-DRcgWmZ6.js").then(p=>p.w);return{getWeekOffset:h}},__vite__mapDeps([3,4,5,2,6,1,7])),y=d(a),u=Math.abs(y);u>8?(f="existing",l=u):f="new"}return{success:!0,hasHistoricalData:i,oldestHistoricalWeek:a,historicalWeeks:o,totalHistoricalWeeks:o.length,userType:f,adaptiveWeekLimit:l,currentWeek:n,analysis:{pitchedItemsCount:e.pitched_items?e.pitched_items.length:0,bossRunsCount:e.data&&e.data.boss_runs?e.data.boss_runs.length:0,weeksWithData:o.length+1}}}catch(t){return console.error("Error in getHistoricalWeekAnalysis:",t),{success:!1,error:t.message}}}async function le(s,t){try{if(!s||!Array.isArray(t))return console.error("Invalid parameters for pitched items cleanup"),{success:!1,error:"Invalid parameters"};const e=await E(),{data:c,error:n}=await e.from("user_data").select("pitched_items").eq("id",s).single();if(n)return console.error("Error fetching pitched items for cleanup:",n),{success:!1,error:n.message};const r=c.pitched_items||[];if(r.length===0)return{success:!0,itemsRemoved:0};const o=new Set;t.forEach((a,f)=>{var l;(l=a.bosses)==null||l.forEach(m=>{const d=`${a.name}-${f}-${m.name}-${m.difficulty}`;o.add(d)})});const i=r.filter(a=>{const f=`${a.character}-${a.characterIdx||0}-${a.boss}-${a.difficulty||"Unknown"}`;let l=o.has(f);if(!l&&(a.difficulty==="Unknown"||!a.difficulty)){const m=`${a.character}-${a.characterIdx||0}-${a.boss}-`;l=Array.from(o).some(d=>d.startsWith(m))}return l});if(i.length!==r.length){const{error:a}=await e.from("user_data").update({pitched_items:i}).eq("id",s);return a?(console.error("Error updating pitched items:",a),{success:!1,error:a.message}):{success:!0,itemsRemoved:r.length-i.length}}else return{success:!0,itemsRemoved:0}}catch(e){return console.error("Error in cleanupOrphanedPitchedItems:",e),{success:!1,error:e.message||"Unknown error occurred"}}}export{le as cleanupOrphanedPitchedItems,ce as clearCharacterPitchedUI,re as exportUserData,Z as getAllPitchedItems,ne as getAvailableWeeks,q as getCurrentWeekKey,ue as getHistoricalWeekAnalysis,X as getPitchedItems,oe as getPitchedResetAuditHistory,ee as getYearlyPitchedStats,se as importUserData,ie as purgeAllStatsData,ae as purgePitchedRecords,te as removeManyPitchedItems,de as saveBatchBossRuns,z as saveBossRun,Q as savePitchedItem};
